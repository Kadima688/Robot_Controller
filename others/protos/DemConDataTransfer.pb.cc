// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DemConDataTransfer.proto

#include "DemConDataTransfer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ExternalDataTransfer {
class Pt_DataVoidDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_DataVoid> _instance;
} _Pt_DataVoid_default_instance_;
class Pt_DataResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_DataResult> _instance;
} _Pt_DataResult_default_instance_;
class Pt_EnableStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_EnableState> _instance;
} _Pt_EnableState_default_instance_;
class Pt_StartServoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_StartServo> _instance;
} _Pt_StartServo_default_instance_;
class Pt_VISUAL_SERVO_SERVOTYPEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_SERVOTYPE> _instance;
} _Pt_VISUAL_SERVO_SERVOTYPE_default_instance_;
class Pt_VISUAL_SERVO_TARGETPOS_XYZDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_TARGETPOS_XYZ> _instance;
} _Pt_VISUAL_SERVO_TARGETPOS_XYZ_default_instance_;
class Pt_VISUAL_SERVO_TARGETPOS_ABCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_TARGETPOS_ABC> _instance;
} _Pt_VISUAL_SERVO_TARGETPOS_ABC_default_instance_;
class Pt_VISUAL_SERVO_ERROR_XYZDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_ERROR_XYZ> _instance;
} _Pt_VISUAL_SERVO_ERROR_XYZ_default_instance_;
class Pt_VISUAL_SERVO_ERROR_ABCDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_ERROR_ABC> _instance;
} _Pt_VISUAL_SERVO_ERROR_ABC_default_instance_;
class Pt_VISUAL_SERVO_ERROR_IMAGEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_ERROR_IMAGE> _instance;
} _Pt_VISUAL_SERVO_ERROR_IMAGE_default_instance_;
class Pt_VISUAL_SERVO_ENDSERVODefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_VISUAL_SERVO_ENDSERVO> _instance;
} _Pt_VISUAL_SERVO_ENDSERVO_default_instance_;
class Pt_SPEED_PERCENTDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_SPEED_PERCENT> _instance;
} _Pt_SPEED_PERCENT_default_instance_;
class Pt_INCHINGDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_INCHING> _instance;
} _Pt_INCHING_default_instance_;
class Pt_AXISPOS_SCARADefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_AXISPOS_SCARA> _instance;
} _Pt_AXISPOS_SCARA_default_instance_;
}  // namespace ExternalDataTransfer
static void InitDefaultsscc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_AXISPOS_SCARA_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_AXISPOS_SCARA();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_AXISPOS_SCARA::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_DataResult_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_DataResult_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_DataResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_DataResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_DataResult_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_DataResult_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_DataVoid_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_DataVoid_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_DataVoid();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_DataVoid::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_DataVoid_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_DataVoid_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_EnableState_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_EnableState_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_EnableState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_EnableState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_EnableState_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_EnableState_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_INCHING_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_INCHING_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_INCHING();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_INCHING::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_INCHING_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_INCHING_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_SPEED_PERCENT_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_SPEED_PERCENT_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_SPEED_PERCENT();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_SPEED_PERCENT::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_SPEED_PERCENT_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_SPEED_PERCENT_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_StartServo_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_StartServo_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_StartServo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_StartServo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_StartServo_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_StartServo_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_ENDSERVO_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_ENDSERVO_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_ENDSERVO_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_ENDSERVO_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_ERROR_ABC_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_ERROR_ABC_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_ERROR_ABC_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_ERROR_ABC_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_ERROR_IMAGE_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_ERROR_IMAGE_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_ERROR_IMAGE_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_ERROR_IMAGE_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_ERROR_XYZ_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_ERROR_XYZ_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_ERROR_XYZ_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_ERROR_XYZ_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_SERVOTYPE_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_SERVOTYPE_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_SERVOTYPE_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_SERVOTYPE_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_TARGETPOS_ABC_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_TARGETPOS_ABC_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_TARGETPOS_ABC_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_TARGETPOS_ABC_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_VISUAL_SERVO_TARGETPOS_XYZ_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_VISUAL_SERVO_TARGETPOS_XYZ_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_VISUAL_SERVO_TARGETPOS_XYZ_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_VISUAL_SERVO_TARGETPOS_XYZ_DemConDataTransfer_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_DemConDataTransfer_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_DemConDataTransfer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_DemConDataTransfer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_DemConDataTransfer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataVoid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataVoid, null_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataResult, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_EnableState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_EnableState, enablestate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_StartServo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_StartServo, startservo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE, servotype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ, target_x_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ, target_y_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ, target_z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC, target_a_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC, target_b_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC, target_c_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ, error_xyz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC, error_abc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE, error_image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO, endservo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_SPEED_PERCENT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_SPEED_PERCENT, percent_speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_INCHING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_INCHING, axis_num_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_INCHING, axis_up_dwon_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_INCHING, axis_press_release_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a1_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a2_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, d_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a4_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ExternalDataTransfer::Pt_DataVoid)},
  { 6, -1, sizeof(::ExternalDataTransfer::Pt_DataResult)},
  { 12, -1, sizeof(::ExternalDataTransfer::Pt_EnableState)},
  { 18, -1, sizeof(::ExternalDataTransfer::Pt_StartServo)},
  { 24, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE)},
  { 30, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ)},
  { 38, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC)},
  { 46, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ)},
  { 52, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC)},
  { 58, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE)},
  { 64, -1, sizeof(::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO)},
  { 70, -1, sizeof(::ExternalDataTransfer::Pt_SPEED_PERCENT)},
  { 76, -1, sizeof(::ExternalDataTransfer::Pt_INCHING)},
  { 84, -1, sizeof(::ExternalDataTransfer::Pt_AXISPOS_SCARA)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_DataVoid_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_DataResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_EnableState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_StartServo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_SERVOTYPE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_TARGETPOS_XYZ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_TARGETPOS_ABC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_ERROR_XYZ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_ERROR_ABC_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_ERROR_IMAGE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_VISUAL_SERVO_ENDSERVO_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_SPEED_PERCENT_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_INCHING_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_AXISPOS_SCARA_default_instance_),
};

const char descriptor_table_protodef_DemConDataTransfer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030DemConDataTransfer.proto\022\024ExternalData"
  "Transfer\"\033\n\013Pt_DataVoid\022\014\n\004null\030\001 \001(\005\"\037\n"
  "\rPt_DataResult\022\016\n\006result\030\001 \001(\005\"%\n\016Pt_Ena"
  "bleState\022\023\n\013enablestate\030\001 \001(\005\"#\n\rPt_Star"
  "tServo\022\022\n\nstartservo\030\001 \001(\005\".\n\031Pt_VISUAL_"
  "SERVO_SERVOTYPE\022\021\n\tservotype\030\001 \001(\005\"U\n\035Pt"
  "_VISUAL_SERVO_TARGETPOS_XYZ\022\020\n\010target_x\030"
  "\001 \001(\001\022\020\n\010target_y\030\002 \001(\001\022\020\n\010target_z\030\003 \001("
  "\001\"U\n\035Pt_VISUAL_SERVO_TARGETPOS_ABC\022\020\n\010ta"
  "rget_a\030\001 \001(\001\022\020\n\010target_b\030\002 \001(\001\022\020\n\010target"
  "_c\030\003 \001(\001\".\n\031Pt_VISUAL_SERVO_ERROR_XYZ\022\021\n"
  "\terror_xyz\030\001 \001(\001\".\n\031Pt_VISUAL_SERVO_ERRO"
  "R_ABC\022\021\n\terror_abc\030\001 \001(\001\"2\n\033Pt_VISUAL_SE"
  "RVO_ERROR_IMAGE\022\023\n\013error_image\030\001 \001(\001\",\n\030"
  "Pt_VISUAL_SERVO_ENDSERVO\022\020\n\010endservo\030\001 \001"
  "(\005\")\n\020Pt_SPEED_PERCENT\022\025\n\rpercent_speed\030"
  "\001 \001(\005\"P\n\nPt_INCHING\022\020\n\010axis_num\030\001 \001(\005\022\024\n"
  "\014axis_up_dwon\030\002 \001(\005\022\032\n\022axis_press_releas"
  "e\030\003 \001(\005\"A\n\020Pt_AXISPOS_SCARA\022\n\n\002a1\030\001 \001(\001\022"
  "\n\n\002a2\030\002 \001(\001\022\t\n\001d\030\003 \001(\001\022\n\n\002a4\030\004 \001(\0012\246\013\n\rR"
  "PCDemConData\022]\n\016SetEnableState\022$.Externa"
  "lDataTransfer.Pt_EnableState\032#.ExternalD"
  "ataTransfer.Pt_DataResult\"\000\022[\n\rSetStartS"
  "ervo\022#.ExternalDataTransfer.Pt_StartServ"
  "o\032#.ExternalDataTransfer.Pt_DataResult\"\000"
  "\022w\n\035SendVisualServoData_ServoType\022/.Exte"
  "rnalDataTransfer.Pt_VISUAL_SERVO_SERVOTY"
  "PE\032#.ExternalDataTransfer.Pt_DataResult\""
  "\000\022\177\n!SendVisualServoData_TargetPos_XYZ\0223"
  ".ExternalDataTransfer.Pt_VISUAL_SERVO_TA"
  "RGETPOS_XYZ\032#.ExternalDataTransfer.Pt_Da"
  "taResult\"\000\022\177\n!SendVisualServoData_Target"
  "Pos_ABC\0223.ExternalDataTransfer.Pt_VISUAL"
  "_SERVO_TARGETPOS_ABC\032#.ExternalDataTrans"
  "fer.Pt_DataResult\"\000\022w\n\035SendVisualServoDa"
  "ta_Error_XYZ\022/.ExternalDataTransfer.Pt_V"
  "ISUAL_SERVO_ERROR_XYZ\032#.ExternalDataTran"
  "sfer.Pt_DataResult\"\000\022w\n\035SendVisualServoD"
  "ata_Error_ABC\022/.ExternalDataTransfer.Pt_"
  "VISUAL_SERVO_ERROR_ABC\032#.ExternalDataTra"
  "nsfer.Pt_DataResult\"\000\022{\n\037SendVisualServo"
  "Data_Error_IMAGE\0221.ExternalDataTransfer."
  "Pt_VISUAL_SERVO_ERROR_IMAGE\032#.ExternalDa"
  "taTransfer.Pt_DataResult\"\000\022u\n\034SendVisual"
  "ServoData_EndServo\022..ExternalDataTransfe"
  "r.Pt_VISUAL_SERVO_ENDSERVO\032#.ExternalDat"
  "aTransfer.Pt_DataResult\"\000\022^\n\017GetAXISPOSS"
  "CARA\022!.ExternalDataTransfer.Pt_DataVoid\032"
  "&.ExternalDataTransfer.Pt_AXISPOS_SCARA\""
  "\000\022a\n\020SendSpeedPercent\022&.ExternalDataTran"
  "sfer.Pt_SPEED_PERCENT\032#.ExternalDataTran"
  "sfer.Pt_DataResult\"\000\022V\n\013SendInching\022 .Ex"
  "ternalDataTransfer.Pt_INCHING\032#.External"
  "DataTransfer.Pt_DataResult\"\000\022]\n\014SendSCAR"
  "APTP\022&.ExternalDataTransfer.Pt_AXISPOS_S"
  "CARA\032#.ExternalDataTransfer.Pt_DataResul"
  "t\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_DemConDataTransfer_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_DemConDataTransfer_2eproto_sccs[14] = {
  &scc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_DataResult_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_DataVoid_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_EnableState_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_INCHING_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_SPEED_PERCENT_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_StartServo_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_ENDSERVO_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_ERROR_ABC_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_ERROR_IMAGE_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_ERROR_XYZ_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_SERVOTYPE_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_TARGETPOS_ABC_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_VISUAL_SERVO_TARGETPOS_XYZ_DemConDataTransfer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_DemConDataTransfer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DemConDataTransfer_2eproto = {
  false, false, descriptor_table_protodef_DemConDataTransfer_2eproto, "DemConDataTransfer.proto", 2251,
  &descriptor_table_DemConDataTransfer_2eproto_once, descriptor_table_DemConDataTransfer_2eproto_sccs, descriptor_table_DemConDataTransfer_2eproto_deps, 14, 0,
  schemas, file_default_instances, TableStruct_DemConDataTransfer_2eproto::offsets,
  file_level_metadata_DemConDataTransfer_2eproto, 14, file_level_enum_descriptors_DemConDataTransfer_2eproto, file_level_service_descriptors_DemConDataTransfer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_DemConDataTransfer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_DemConDataTransfer_2eproto)), true);
namespace ExternalDataTransfer {

// ===================================================================

void Pt_DataVoid::InitAsDefaultInstance() {
}
class Pt_DataVoid::_Internal {
 public:
};

Pt_DataVoid::Pt_DataVoid(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_DataVoid)
}
Pt_DataVoid::Pt_DataVoid(const Pt_DataVoid& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  null_ = from.null_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_DataVoid)
}

void Pt_DataVoid::SharedCtor() {
  null_ = 0;
}

Pt_DataVoid::~Pt_DataVoid() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_DataVoid)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_DataVoid::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_DataVoid::ArenaDtor(void* object) {
  Pt_DataVoid* _this = reinterpret_cast< Pt_DataVoid* >(object);
  (void)_this;
}
void Pt_DataVoid::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_DataVoid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_DataVoid& Pt_DataVoid::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_DataVoid_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_DataVoid::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_DataVoid)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  null_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_DataVoid::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 null = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          null_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_DataVoid::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_DataVoid)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 null = 1;
  if (this->null() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_null(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_DataVoid)
  return target;
}

size_t Pt_DataVoid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_DataVoid)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 null = 1;
  if (this->null() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_null());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_DataVoid::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_DataVoid)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_DataVoid* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_DataVoid>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_DataVoid)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_DataVoid)
    MergeFrom(*source);
  }
}

void Pt_DataVoid::MergeFrom(const Pt_DataVoid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_DataVoid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.null() != 0) {
    _internal_set_null(from._internal_null());
  }
}

void Pt_DataVoid::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_DataVoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_DataVoid::CopyFrom(const Pt_DataVoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_DataVoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_DataVoid::IsInitialized() const {
  return true;
}

void Pt_DataVoid::InternalSwap(Pt_DataVoid* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(null_, other->null_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_DataVoid::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_DataResult::InitAsDefaultInstance() {
}
class Pt_DataResult::_Internal {
 public:
};

Pt_DataResult::Pt_DataResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_DataResult)
}
Pt_DataResult::Pt_DataResult(const Pt_DataResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_DataResult)
}

void Pt_DataResult::SharedCtor() {
  result_ = 0;
}

Pt_DataResult::~Pt_DataResult() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_DataResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_DataResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_DataResult::ArenaDtor(void* object) {
  Pt_DataResult* _this = reinterpret_cast< Pt_DataResult* >(object);
  (void)_this;
}
void Pt_DataResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_DataResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_DataResult& Pt_DataResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_DataResult_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_DataResult::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_DataResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_DataResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_DataResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_DataResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_DataResult)
  return target;
}

size_t Pt_DataResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_DataResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_DataResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_DataResult)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_DataResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_DataResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_DataResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_DataResult)
    MergeFrom(*source);
  }
}

void Pt_DataResult::MergeFrom(const Pt_DataResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_DataResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void Pt_DataResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_DataResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_DataResult::CopyFrom(const Pt_DataResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_DataResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_DataResult::IsInitialized() const {
  return true;
}

void Pt_DataResult::InternalSwap(Pt_DataResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_DataResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_EnableState::InitAsDefaultInstance() {
}
class Pt_EnableState::_Internal {
 public:
};

Pt_EnableState::Pt_EnableState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_EnableState)
}
Pt_EnableState::Pt_EnableState(const Pt_EnableState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enablestate_ = from.enablestate_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_EnableState)
}

void Pt_EnableState::SharedCtor() {
  enablestate_ = 0;
}

Pt_EnableState::~Pt_EnableState() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_EnableState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_EnableState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_EnableState::ArenaDtor(void* object) {
  Pt_EnableState* _this = reinterpret_cast< Pt_EnableState* >(object);
  (void)_this;
}
void Pt_EnableState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_EnableState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_EnableState& Pt_EnableState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_EnableState_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_EnableState::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_EnableState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enablestate_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_EnableState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 enablestate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          enablestate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_EnableState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_EnableState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enablestate = 1;
  if (this->enablestate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_enablestate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_EnableState)
  return target;
}

size_t Pt_EnableState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_EnableState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 enablestate = 1;
  if (this->enablestate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_enablestate());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_EnableState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_EnableState)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_EnableState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_EnableState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_EnableState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_EnableState)
    MergeFrom(*source);
  }
}

void Pt_EnableState::MergeFrom(const Pt_EnableState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_EnableState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enablestate() != 0) {
    _internal_set_enablestate(from._internal_enablestate());
  }
}

void Pt_EnableState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_EnableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_EnableState::CopyFrom(const Pt_EnableState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_EnableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_EnableState::IsInitialized() const {
  return true;
}

void Pt_EnableState::InternalSwap(Pt_EnableState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(enablestate_, other->enablestate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_EnableState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_StartServo::InitAsDefaultInstance() {
}
class Pt_StartServo::_Internal {
 public:
};

Pt_StartServo::Pt_StartServo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_StartServo)
}
Pt_StartServo::Pt_StartServo(const Pt_StartServo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  startservo_ = from.startservo_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_StartServo)
}

void Pt_StartServo::SharedCtor() {
  startservo_ = 0;
}

Pt_StartServo::~Pt_StartServo() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_StartServo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_StartServo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_StartServo::ArenaDtor(void* object) {
  Pt_StartServo* _this = reinterpret_cast< Pt_StartServo* >(object);
  (void)_this;
}
void Pt_StartServo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_StartServo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_StartServo& Pt_StartServo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_StartServo_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_StartServo::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_StartServo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  startservo_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_StartServo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 startservo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          startservo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_StartServo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_StartServo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 startservo = 1;
  if (this->startservo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_startservo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_StartServo)
  return target;
}

size_t Pt_StartServo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_StartServo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 startservo = 1;
  if (this->startservo() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_startservo());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_StartServo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_StartServo)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_StartServo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_StartServo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_StartServo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_StartServo)
    MergeFrom(*source);
  }
}

void Pt_StartServo::MergeFrom(const Pt_StartServo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_StartServo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.startservo() != 0) {
    _internal_set_startservo(from._internal_startservo());
  }
}

void Pt_StartServo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_StartServo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_StartServo::CopyFrom(const Pt_StartServo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_StartServo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_StartServo::IsInitialized() const {
  return true;
}

void Pt_StartServo::InternalSwap(Pt_StartServo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(startservo_, other->startservo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_StartServo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_SERVOTYPE::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_SERVOTYPE::_Internal {
 public:
};

Pt_VISUAL_SERVO_SERVOTYPE::Pt_VISUAL_SERVO_SERVOTYPE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
}
Pt_VISUAL_SERVO_SERVOTYPE::Pt_VISUAL_SERVO_SERVOTYPE(const Pt_VISUAL_SERVO_SERVOTYPE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  servotype_ = from.servotype_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
}

void Pt_VISUAL_SERVO_SERVOTYPE::SharedCtor() {
  servotype_ = 0;
}

Pt_VISUAL_SERVO_SERVOTYPE::~Pt_VISUAL_SERVO_SERVOTYPE() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_SERVOTYPE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_SERVOTYPE::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_SERVOTYPE* _this = reinterpret_cast< Pt_VISUAL_SERVO_SERVOTYPE* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_SERVOTYPE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_SERVOTYPE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_SERVOTYPE& Pt_VISUAL_SERVO_SERVOTYPE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_SERVOTYPE_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_SERVOTYPE::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servotype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_SERVOTYPE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 servotype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          servotype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_SERVOTYPE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 servotype = 1;
  if (this->servotype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_servotype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  return target;
}

size_t Pt_VISUAL_SERVO_SERVOTYPE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 servotype = 1;
  if (this->servotype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_servotype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_SERVOTYPE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_SERVOTYPE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_SERVOTYPE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_SERVOTYPE::MergeFrom(const Pt_VISUAL_SERVO_SERVOTYPE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servotype() != 0) {
    _internal_set_servotype(from._internal_servotype());
  }
}

void Pt_VISUAL_SERVO_SERVOTYPE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_SERVOTYPE::CopyFrom(const Pt_VISUAL_SERVO_SERVOTYPE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_SERVOTYPE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_SERVOTYPE::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_SERVOTYPE::InternalSwap(Pt_VISUAL_SERVO_SERVOTYPE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(servotype_, other->servotype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_SERVOTYPE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_TARGETPOS_XYZ::_Internal {
 public:
};

Pt_VISUAL_SERVO_TARGETPOS_XYZ::Pt_VISUAL_SERVO_TARGETPOS_XYZ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
}
Pt_VISUAL_SERVO_TARGETPOS_XYZ::Pt_VISUAL_SERVO_TARGETPOS_XYZ(const Pt_VISUAL_SERVO_TARGETPOS_XYZ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&target_x_, &from.target_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_z_) -
    reinterpret_cast<char*>(&target_x_)) + sizeof(target_z_));
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::SharedCtor() {
  ::memset(&target_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_z_) -
      reinterpret_cast<char*>(&target_x_)) + sizeof(target_z_));
}

Pt_VISUAL_SERVO_TARGETPOS_XYZ::~Pt_VISUAL_SERVO_TARGETPOS_XYZ() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_TARGETPOS_XYZ* _this = reinterpret_cast< Pt_VISUAL_SERVO_TARGETPOS_XYZ* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_TARGETPOS_XYZ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_TARGETPOS_XYZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_TARGETPOS_XYZ& Pt_VISUAL_SERVO_TARGETPOS_XYZ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_TARGETPOS_XYZ_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_TARGETPOS_XYZ::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_z_) -
      reinterpret_cast<char*>(&target_x_)) + sizeof(target_z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_TARGETPOS_XYZ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double target_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          target_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double target_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          target_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double target_z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          target_z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_TARGETPOS_XYZ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double target_x = 1;
  if (!(this->target_x() <= 0 && this->target_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_target_x(), target);
  }

  // double target_y = 2;
  if (!(this->target_y() <= 0 && this->target_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_target_y(), target);
  }

  // double target_z = 3;
  if (!(this->target_z() <= 0 && this->target_z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_target_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  return target;
}

size_t Pt_VISUAL_SERVO_TARGETPOS_XYZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double target_x = 1;
  if (!(this->target_x() <= 0 && this->target_x() >= 0)) {
    total_size += 1 + 8;
  }

  // double target_y = 2;
  if (!(this->target_y() <= 0 && this->target_y() >= 0)) {
    total_size += 1 + 8;
  }

  // double target_z = 3;
  if (!(this->target_z() <= 0 && this->target_z() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_TARGETPOS_XYZ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_TARGETPOS_XYZ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::MergeFrom(const Pt_VISUAL_SERVO_TARGETPOS_XYZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.target_x() <= 0 && from.target_x() >= 0)) {
    _internal_set_target_x(from._internal_target_x());
  }
  if (!(from.target_y() <= 0 && from.target_y() >= 0)) {
    _internal_set_target_y(from._internal_target_y());
  }
  if (!(from.target_z() <= 0 && from.target_z() >= 0)) {
    _internal_set_target_z(from._internal_target_z());
  }
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::CopyFrom(const Pt_VISUAL_SERVO_TARGETPOS_XYZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_XYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_TARGETPOS_XYZ::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_TARGETPOS_XYZ::InternalSwap(Pt_VISUAL_SERVO_TARGETPOS_XYZ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pt_VISUAL_SERVO_TARGETPOS_XYZ, target_z_)
      + sizeof(Pt_VISUAL_SERVO_TARGETPOS_XYZ::target_z_)
      - PROTOBUF_FIELD_OFFSET(Pt_VISUAL_SERVO_TARGETPOS_XYZ, target_x_)>(
          reinterpret_cast<char*>(&target_x_),
          reinterpret_cast<char*>(&other->target_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_TARGETPOS_XYZ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_TARGETPOS_ABC::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_TARGETPOS_ABC::_Internal {
 public:
};

Pt_VISUAL_SERVO_TARGETPOS_ABC::Pt_VISUAL_SERVO_TARGETPOS_ABC(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
}
Pt_VISUAL_SERVO_TARGETPOS_ABC::Pt_VISUAL_SERVO_TARGETPOS_ABC(const Pt_VISUAL_SERVO_TARGETPOS_ABC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&target_a_, &from.target_a_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_c_) -
    reinterpret_cast<char*>(&target_a_)) + sizeof(target_c_));
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::SharedCtor() {
  ::memset(&target_a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_c_) -
      reinterpret_cast<char*>(&target_a_)) + sizeof(target_c_));
}

Pt_VISUAL_SERVO_TARGETPOS_ABC::~Pt_VISUAL_SERVO_TARGETPOS_ABC() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_TARGETPOS_ABC* _this = reinterpret_cast< Pt_VISUAL_SERVO_TARGETPOS_ABC* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_TARGETPOS_ABC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_TARGETPOS_ABC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_TARGETPOS_ABC& Pt_VISUAL_SERVO_TARGETPOS_ABC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_TARGETPOS_ABC_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_TARGETPOS_ABC::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_c_) -
      reinterpret_cast<char*>(&target_a_)) + sizeof(target_c_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_TARGETPOS_ABC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double target_a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          target_a_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double target_b = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          target_b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double target_c = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          target_c_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_TARGETPOS_ABC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double target_a = 1;
  if (!(this->target_a() <= 0 && this->target_a() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_target_a(), target);
  }

  // double target_b = 2;
  if (!(this->target_b() <= 0 && this->target_b() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_target_b(), target);
  }

  // double target_c = 3;
  if (!(this->target_c() <= 0 && this->target_c() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_target_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  return target;
}

size_t Pt_VISUAL_SERVO_TARGETPOS_ABC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double target_a = 1;
  if (!(this->target_a() <= 0 && this->target_a() >= 0)) {
    total_size += 1 + 8;
  }

  // double target_b = 2;
  if (!(this->target_b() <= 0 && this->target_b() >= 0)) {
    total_size += 1 + 8;
  }

  // double target_c = 3;
  if (!(this->target_c() <= 0 && this->target_c() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_TARGETPOS_ABC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_TARGETPOS_ABC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::MergeFrom(const Pt_VISUAL_SERVO_TARGETPOS_ABC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.target_a() <= 0 && from.target_a() >= 0)) {
    _internal_set_target_a(from._internal_target_a());
  }
  if (!(from.target_b() <= 0 && from.target_b() >= 0)) {
    _internal_set_target_b(from._internal_target_b());
  }
  if (!(from.target_c() <= 0 && from.target_c() >= 0)) {
    _internal_set_target_c(from._internal_target_c());
  }
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::CopyFrom(const Pt_VISUAL_SERVO_TARGETPOS_ABC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_TARGETPOS_ABC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_TARGETPOS_ABC::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_TARGETPOS_ABC::InternalSwap(Pt_VISUAL_SERVO_TARGETPOS_ABC* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pt_VISUAL_SERVO_TARGETPOS_ABC, target_c_)
      + sizeof(Pt_VISUAL_SERVO_TARGETPOS_ABC::target_c_)
      - PROTOBUF_FIELD_OFFSET(Pt_VISUAL_SERVO_TARGETPOS_ABC, target_a_)>(
          reinterpret_cast<char*>(&target_a_),
          reinterpret_cast<char*>(&other->target_a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_TARGETPOS_ABC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_ERROR_XYZ::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_ERROR_XYZ::_Internal {
 public:
};

Pt_VISUAL_SERVO_ERROR_XYZ::Pt_VISUAL_SERVO_ERROR_XYZ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
}
Pt_VISUAL_SERVO_ERROR_XYZ::Pt_VISUAL_SERVO_ERROR_XYZ(const Pt_VISUAL_SERVO_ERROR_XYZ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_xyz_ = from.error_xyz_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
}

void Pt_VISUAL_SERVO_ERROR_XYZ::SharedCtor() {
  error_xyz_ = 0;
}

Pt_VISUAL_SERVO_ERROR_XYZ::~Pt_VISUAL_SERVO_ERROR_XYZ() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_ERROR_XYZ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_ERROR_XYZ::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_ERROR_XYZ* _this = reinterpret_cast< Pt_VISUAL_SERVO_ERROR_XYZ* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_ERROR_XYZ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_ERROR_XYZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_ERROR_XYZ& Pt_VISUAL_SERVO_ERROR_XYZ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_ERROR_XYZ_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_ERROR_XYZ::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_xyz_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_ERROR_XYZ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double error_xyz = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          error_xyz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_ERROR_XYZ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double error_xyz = 1;
  if (!(this->error_xyz() <= 0 && this->error_xyz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_error_xyz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  return target;
}

size_t Pt_VISUAL_SERVO_ERROR_XYZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double error_xyz = 1;
  if (!(this->error_xyz() <= 0 && this->error_xyz() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_ERROR_XYZ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_ERROR_XYZ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_ERROR_XYZ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_ERROR_XYZ::MergeFrom(const Pt_VISUAL_SERVO_ERROR_XYZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.error_xyz() <= 0 && from.error_xyz() >= 0)) {
    _internal_set_error_xyz(from._internal_error_xyz());
  }
}

void Pt_VISUAL_SERVO_ERROR_XYZ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_ERROR_XYZ::CopyFrom(const Pt_VISUAL_SERVO_ERROR_XYZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_XYZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_ERROR_XYZ::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_ERROR_XYZ::InternalSwap(Pt_VISUAL_SERVO_ERROR_XYZ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(error_xyz_, other->error_xyz_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_ERROR_XYZ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_ERROR_ABC::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_ERROR_ABC::_Internal {
 public:
};

Pt_VISUAL_SERVO_ERROR_ABC::Pt_VISUAL_SERVO_ERROR_ABC(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
}
Pt_VISUAL_SERVO_ERROR_ABC::Pt_VISUAL_SERVO_ERROR_ABC(const Pt_VISUAL_SERVO_ERROR_ABC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_abc_ = from.error_abc_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
}

void Pt_VISUAL_SERVO_ERROR_ABC::SharedCtor() {
  error_abc_ = 0;
}

Pt_VISUAL_SERVO_ERROR_ABC::~Pt_VISUAL_SERVO_ERROR_ABC() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_ERROR_ABC::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_ERROR_ABC::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_ERROR_ABC* _this = reinterpret_cast< Pt_VISUAL_SERVO_ERROR_ABC* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_ERROR_ABC::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_ERROR_ABC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_ERROR_ABC& Pt_VISUAL_SERVO_ERROR_ABC::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_ERROR_ABC_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_ERROR_ABC::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_abc_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_ERROR_ABC::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double error_abc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          error_abc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_ERROR_ABC::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double error_abc = 1;
  if (!(this->error_abc() <= 0 && this->error_abc() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_error_abc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  return target;
}

size_t Pt_VISUAL_SERVO_ERROR_ABC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double error_abc = 1;
  if (!(this->error_abc() <= 0 && this->error_abc() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_ERROR_ABC::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_ERROR_ABC* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_ERROR_ABC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_ERROR_ABC::MergeFrom(const Pt_VISUAL_SERVO_ERROR_ABC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.error_abc() <= 0 && from.error_abc() >= 0)) {
    _internal_set_error_abc(from._internal_error_abc());
  }
}

void Pt_VISUAL_SERVO_ERROR_ABC::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_ERROR_ABC::CopyFrom(const Pt_VISUAL_SERVO_ERROR_ABC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_ABC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_ERROR_ABC::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_ERROR_ABC::InternalSwap(Pt_VISUAL_SERVO_ERROR_ABC* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(error_abc_, other->error_abc_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_ERROR_ABC::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_ERROR_IMAGE::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_ERROR_IMAGE::_Internal {
 public:
};

Pt_VISUAL_SERVO_ERROR_IMAGE::Pt_VISUAL_SERVO_ERROR_IMAGE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
}
Pt_VISUAL_SERVO_ERROR_IMAGE::Pt_VISUAL_SERVO_ERROR_IMAGE(const Pt_VISUAL_SERVO_ERROR_IMAGE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_image_ = from.error_image_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::SharedCtor() {
  error_image_ = 0;
}

Pt_VISUAL_SERVO_ERROR_IMAGE::~Pt_VISUAL_SERVO_ERROR_IMAGE() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_ERROR_IMAGE* _this = reinterpret_cast< Pt_VISUAL_SERVO_ERROR_IMAGE* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_ERROR_IMAGE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_ERROR_IMAGE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_ERROR_IMAGE& Pt_VISUAL_SERVO_ERROR_IMAGE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_ERROR_IMAGE_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_ERROR_IMAGE::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_image_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_ERROR_IMAGE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double error_image = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          error_image_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_ERROR_IMAGE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double error_image = 1;
  if (!(this->error_image() <= 0 && this->error_image() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_error_image(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  return target;
}

size_t Pt_VISUAL_SERVO_ERROR_IMAGE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double error_image = 1;
  if (!(this->error_image() <= 0 && this->error_image() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_ERROR_IMAGE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_ERROR_IMAGE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::MergeFrom(const Pt_VISUAL_SERVO_ERROR_IMAGE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.error_image() <= 0 && from.error_image() >= 0)) {
    _internal_set_error_image(from._internal_error_image());
  }
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::CopyFrom(const Pt_VISUAL_SERVO_ERROR_IMAGE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ERROR_IMAGE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_ERROR_IMAGE::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_ERROR_IMAGE::InternalSwap(Pt_VISUAL_SERVO_ERROR_IMAGE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(error_image_, other->error_image_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_ERROR_IMAGE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_VISUAL_SERVO_ENDSERVO::InitAsDefaultInstance() {
}
class Pt_VISUAL_SERVO_ENDSERVO::_Internal {
 public:
};

Pt_VISUAL_SERVO_ENDSERVO::Pt_VISUAL_SERVO_ENDSERVO(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
}
Pt_VISUAL_SERVO_ENDSERVO::Pt_VISUAL_SERVO_ENDSERVO(const Pt_VISUAL_SERVO_ENDSERVO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  endservo_ = from.endservo_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
}

void Pt_VISUAL_SERVO_ENDSERVO::SharedCtor() {
  endservo_ = 0;
}

Pt_VISUAL_SERVO_ENDSERVO::~Pt_VISUAL_SERVO_ENDSERVO() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_VISUAL_SERVO_ENDSERVO::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_VISUAL_SERVO_ENDSERVO::ArenaDtor(void* object) {
  Pt_VISUAL_SERVO_ENDSERVO* _this = reinterpret_cast< Pt_VISUAL_SERVO_ENDSERVO* >(object);
  (void)_this;
}
void Pt_VISUAL_SERVO_ENDSERVO::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_VISUAL_SERVO_ENDSERVO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_VISUAL_SERVO_ENDSERVO& Pt_VISUAL_SERVO_ENDSERVO::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_VISUAL_SERVO_ENDSERVO_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_VISUAL_SERVO_ENDSERVO::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endservo_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_VISUAL_SERVO_ENDSERVO::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 endservo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          endservo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_VISUAL_SERVO_ENDSERVO::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 endservo = 1;
  if (this->endservo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_endservo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  return target;
}

size_t Pt_VISUAL_SERVO_ENDSERVO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 endservo = 1;
  if (this->endservo() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_endservo());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_VISUAL_SERVO_ENDSERVO::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_VISUAL_SERVO_ENDSERVO* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_VISUAL_SERVO_ENDSERVO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
    MergeFrom(*source);
  }
}

void Pt_VISUAL_SERVO_ENDSERVO::MergeFrom(const Pt_VISUAL_SERVO_ENDSERVO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.endservo() != 0) {
    _internal_set_endservo(from._internal_endservo());
  }
}

void Pt_VISUAL_SERVO_ENDSERVO::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_VISUAL_SERVO_ENDSERVO::CopyFrom(const Pt_VISUAL_SERVO_ENDSERVO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_VISUAL_SERVO_ENDSERVO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_VISUAL_SERVO_ENDSERVO::IsInitialized() const {
  return true;
}

void Pt_VISUAL_SERVO_ENDSERVO::InternalSwap(Pt_VISUAL_SERVO_ENDSERVO* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(endservo_, other->endservo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_VISUAL_SERVO_ENDSERVO::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_SPEED_PERCENT::InitAsDefaultInstance() {
}
class Pt_SPEED_PERCENT::_Internal {
 public:
};

Pt_SPEED_PERCENT::Pt_SPEED_PERCENT(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_SPEED_PERCENT)
}
Pt_SPEED_PERCENT::Pt_SPEED_PERCENT(const Pt_SPEED_PERCENT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  percent_speed_ = from.percent_speed_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_SPEED_PERCENT)
}

void Pt_SPEED_PERCENT::SharedCtor() {
  percent_speed_ = 0;
}

Pt_SPEED_PERCENT::~Pt_SPEED_PERCENT() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_SPEED_PERCENT)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_SPEED_PERCENT::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_SPEED_PERCENT::ArenaDtor(void* object) {
  Pt_SPEED_PERCENT* _this = reinterpret_cast< Pt_SPEED_PERCENT* >(object);
  (void)_this;
}
void Pt_SPEED_PERCENT::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_SPEED_PERCENT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_SPEED_PERCENT& Pt_SPEED_PERCENT::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_SPEED_PERCENT_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_SPEED_PERCENT::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  percent_speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_SPEED_PERCENT::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 percent_speed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          percent_speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_SPEED_PERCENT::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 percent_speed = 1;
  if (this->percent_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_percent_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_SPEED_PERCENT)
  return target;
}

size_t Pt_SPEED_PERCENT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 percent_speed = 1;
  if (this->percent_speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_percent_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_SPEED_PERCENT::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_SPEED_PERCENT* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_SPEED_PERCENT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_SPEED_PERCENT)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_SPEED_PERCENT)
    MergeFrom(*source);
  }
}

void Pt_SPEED_PERCENT::MergeFrom(const Pt_SPEED_PERCENT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.percent_speed() != 0) {
    _internal_set_percent_speed(from._internal_percent_speed());
  }
}

void Pt_SPEED_PERCENT::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_SPEED_PERCENT::CopyFrom(const Pt_SPEED_PERCENT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_SPEED_PERCENT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_SPEED_PERCENT::IsInitialized() const {
  return true;
}

void Pt_SPEED_PERCENT::InternalSwap(Pt_SPEED_PERCENT* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(percent_speed_, other->percent_speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_SPEED_PERCENT::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_INCHING::InitAsDefaultInstance() {
}
class Pt_INCHING::_Internal {
 public:
};

Pt_INCHING::Pt_INCHING(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_INCHING)
}
Pt_INCHING::Pt_INCHING(const Pt_INCHING& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&axis_num_, &from.axis_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&axis_press_release_) -
    reinterpret_cast<char*>(&axis_num_)) + sizeof(axis_press_release_));
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_INCHING)
}

void Pt_INCHING::SharedCtor() {
  ::memset(&axis_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_press_release_) -
      reinterpret_cast<char*>(&axis_num_)) + sizeof(axis_press_release_));
}

Pt_INCHING::~Pt_INCHING() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_INCHING)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_INCHING::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_INCHING::ArenaDtor(void* object) {
  Pt_INCHING* _this = reinterpret_cast< Pt_INCHING* >(object);
  (void)_this;
}
void Pt_INCHING::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_INCHING::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_INCHING& Pt_INCHING::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_INCHING_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_INCHING::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_INCHING)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&axis_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_press_release_) -
      reinterpret_cast<char*>(&axis_num_)) + sizeof(axis_press_release_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_INCHING::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 axis_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          axis_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 axis_up_dwon = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          axis_up_dwon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 axis_press_release = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          axis_press_release_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_INCHING::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_INCHING)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 axis_num = 1;
  if (this->axis_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_axis_num(), target);
  }

  // int32 axis_up_dwon = 2;
  if (this->axis_up_dwon() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_axis_up_dwon(), target);
  }

  // int32 axis_press_release = 3;
  if (this->axis_press_release() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_axis_press_release(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_INCHING)
  return target;
}

size_t Pt_INCHING::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_INCHING)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 axis_num = 1;
  if (this->axis_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_axis_num());
  }

  // int32 axis_up_dwon = 2;
  if (this->axis_up_dwon() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_axis_up_dwon());
  }

  // int32 axis_press_release = 3;
  if (this->axis_press_release() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_axis_press_release());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_INCHING::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_INCHING)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_INCHING* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_INCHING>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_INCHING)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_INCHING)
    MergeFrom(*source);
  }
}

void Pt_INCHING::MergeFrom(const Pt_INCHING& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_INCHING)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.axis_num() != 0) {
    _internal_set_axis_num(from._internal_axis_num());
  }
  if (from.axis_up_dwon() != 0) {
    _internal_set_axis_up_dwon(from._internal_axis_up_dwon());
  }
  if (from.axis_press_release() != 0) {
    _internal_set_axis_press_release(from._internal_axis_press_release());
  }
}

void Pt_INCHING::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_INCHING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_INCHING::CopyFrom(const Pt_INCHING& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_INCHING)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_INCHING::IsInitialized() const {
  return true;
}

void Pt_INCHING::InternalSwap(Pt_INCHING* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pt_INCHING, axis_press_release_)
      + sizeof(Pt_INCHING::axis_press_release_)
      - PROTOBUF_FIELD_OFFSET(Pt_INCHING, axis_num_)>(
          reinterpret_cast<char*>(&axis_num_),
          reinterpret_cast<char*>(&other->axis_num_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_INCHING::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_AXISPOS_SCARA::InitAsDefaultInstance() {
}
class Pt_AXISPOS_SCARA::_Internal {
 public:
};

Pt_AXISPOS_SCARA::Pt_AXISPOS_SCARA(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_AXISPOS_SCARA)
}
Pt_AXISPOS_SCARA::Pt_AXISPOS_SCARA(const Pt_AXISPOS_SCARA& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&a1_, &from.a1_,
    static_cast<size_t>(reinterpret_cast<char*>(&a4_) -
    reinterpret_cast<char*>(&a1_)) + sizeof(a4_));
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_AXISPOS_SCARA)
}

void Pt_AXISPOS_SCARA::SharedCtor() {
  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a4_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(a4_));
}

Pt_AXISPOS_SCARA::~Pt_AXISPOS_SCARA() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_AXISPOS_SCARA::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_AXISPOS_SCARA::ArenaDtor(void* object) {
  Pt_AXISPOS_SCARA* _this = reinterpret_cast< Pt_AXISPOS_SCARA* >(object);
  (void)_this;
}
void Pt_AXISPOS_SCARA::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_AXISPOS_SCARA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_AXISPOS_SCARA& Pt_AXISPOS_SCARA::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_AXISPOS_SCARA::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a4_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(a4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_AXISPOS_SCARA::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double a1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          a1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double a2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          a2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double d = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          d_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double a4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          a4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_AXISPOS_SCARA::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double a1 = 1;
  if (!(this->a1() <= 0 && this->a1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_a1(), target);
  }

  // double a2 = 2;
  if (!(this->a2() <= 0 && this->a2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_a2(), target);
  }

  // double d = 3;
  if (!(this->d() <= 0 && this->d() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_d(), target);
  }

  // double a4 = 4;
  if (!(this->a4() <= 0 && this->a4() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_a4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  return target;
}

size_t Pt_AXISPOS_SCARA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double a1 = 1;
  if (!(this->a1() <= 0 && this->a1() >= 0)) {
    total_size += 1 + 8;
  }

  // double a2 = 2;
  if (!(this->a2() <= 0 && this->a2() >= 0)) {
    total_size += 1 + 8;
  }

  // double d = 3;
  if (!(this->d() <= 0 && this->d() >= 0)) {
    total_size += 1 + 8;
  }

  // double a4 = 4;
  if (!(this->a4() <= 0 && this->a4() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_AXISPOS_SCARA::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_AXISPOS_SCARA* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_AXISPOS_SCARA>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_AXISPOS_SCARA)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_AXISPOS_SCARA)
    MergeFrom(*source);
  }
}

void Pt_AXISPOS_SCARA::MergeFrom(const Pt_AXISPOS_SCARA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.a1() <= 0 && from.a1() >= 0)) {
    _internal_set_a1(from._internal_a1());
  }
  if (!(from.a2() <= 0 && from.a2() >= 0)) {
    _internal_set_a2(from._internal_a2());
  }
  if (!(from.d() <= 0 && from.d() >= 0)) {
    _internal_set_d(from._internal_d());
  }
  if (!(from.a4() <= 0 && from.a4() >= 0)) {
    _internal_set_a4(from._internal_a4());
  }
}

void Pt_AXISPOS_SCARA::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_AXISPOS_SCARA::CopyFrom(const Pt_AXISPOS_SCARA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_AXISPOS_SCARA::IsInitialized() const {
  return true;
}

void Pt_AXISPOS_SCARA::InternalSwap(Pt_AXISPOS_SCARA* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pt_AXISPOS_SCARA, a4_)
      + sizeof(Pt_AXISPOS_SCARA::a4_)
      - PROTOBUF_FIELD_OFFSET(Pt_AXISPOS_SCARA, a1_)>(
          reinterpret_cast<char*>(&a1_),
          reinterpret_cast<char*>(&other->a1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_AXISPOS_SCARA::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ExternalDataTransfer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_DataVoid* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_DataVoid >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_DataVoid >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_DataResult* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_DataResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_DataResult >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_EnableState* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_EnableState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_EnableState >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_StartServo* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_StartServo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_StartServo >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_SERVOTYPE >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_XYZ >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_TARGETPOS_ABC >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_XYZ >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_ABC >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ERROR_IMAGE >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_VISUAL_SERVO_ENDSERVO >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_SPEED_PERCENT* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_SPEED_PERCENT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_SPEED_PERCENT >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_INCHING* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_INCHING >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_INCHING >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_AXISPOS_SCARA* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_AXISPOS_SCARA >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_AXISPOS_SCARA >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
