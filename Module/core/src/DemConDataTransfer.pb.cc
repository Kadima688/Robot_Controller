// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DemConDataTransfer.proto

#include "DemConDataTransfer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ExternalDataTransfer {
class Pt_DataVoidDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_DataVoid> _instance;
} _Pt_DataVoid_default_instance_;
class Pt_DataResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_DataResult> _instance;
} _Pt_DataResult_default_instance_;
class Pt_EnableStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_EnableState> _instance;
} _Pt_EnableState_default_instance_;
class Pt_AXISPOS_SCARADefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Pt_AXISPOS_SCARA> _instance;
} _Pt_AXISPOS_SCARA_default_instance_;
}  // namespace ExternalDataTransfer
static void InitDefaultsscc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_AXISPOS_SCARA_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_AXISPOS_SCARA();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_AXISPOS_SCARA::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_DataResult_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_DataResult_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_DataResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_DataResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_DataResult_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_DataResult_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_DataVoid_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_DataVoid_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_DataVoid();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_DataVoid::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_DataVoid_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_DataVoid_DemConDataTransfer_2eproto}, {}};

static void InitDefaultsscc_info_Pt_EnableState_DemConDataTransfer_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ExternalDataTransfer::_Pt_EnableState_default_instance_;
    new (ptr) ::ExternalDataTransfer::Pt_EnableState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExternalDataTransfer::Pt_EnableState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Pt_EnableState_DemConDataTransfer_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Pt_EnableState_DemConDataTransfer_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_DemConDataTransfer_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_DemConDataTransfer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_DemConDataTransfer_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_DemConDataTransfer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataVoid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_DataResult, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_EnableState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_EnableState, enablestate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a1_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a2_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a3_),
  PROTOBUF_FIELD_OFFSET(::ExternalDataTransfer::Pt_AXISPOS_SCARA, a4_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ExternalDataTransfer::Pt_DataVoid)},
  { 5, -1, sizeof(::ExternalDataTransfer::Pt_DataResult)},
  { 11, -1, sizeof(::ExternalDataTransfer::Pt_EnableState)},
  { 17, -1, sizeof(::ExternalDataTransfer::Pt_AXISPOS_SCARA)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_DataVoid_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_DataResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_EnableState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ExternalDataTransfer::_Pt_AXISPOS_SCARA_default_instance_),
};

const char descriptor_table_protodef_DemConDataTransfer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030DemConDataTransfer.proto\022\024ExternalData"
  "Transfer\"\r\n\013Pt_DataVoid\"\037\n\rPt_DataResult"
  "\022\016\n\006result\030\001 \001(\005\"%\n\016Pt_EnableState\022\023\n\013en"
  "ablestate\030\001 \001(\005\"B\n\020Pt_AXISPOS_SCARA\022\n\n\002a"
  "1\030\001 \001(\001\022\n\n\002a2\030\002 \001(\001\022\n\n\002a3\030\003 \001(\001\022\n\n\002a4\030\004 "
  "\001(\0012\316\001\n\rRPCDemConData\022]\n\016SetEnableState\022"
  "$.ExternalDataTransfer.Pt_EnableState\032#."
  "ExternalDataTransfer.Pt_DataResult\"\000\022^\n\017"
  "GetAXISPOSSCARA\022!.ExternalDataTransfer.P"
  "t_DataVoid\032&.ExternalDataTransfer.Pt_AXI"
  "SPOS_SCARA\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_DemConDataTransfer_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_DemConDataTransfer_2eproto_sccs[4] = {
  &scc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_DataResult_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_DataVoid_DemConDataTransfer_2eproto.base,
  &scc_info_Pt_EnableState_DemConDataTransfer_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_DemConDataTransfer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DemConDataTransfer_2eproto = {
  false, false, descriptor_table_protodef_DemConDataTransfer_2eproto, "DemConDataTransfer.proto", 420,
  &descriptor_table_DemConDataTransfer_2eproto_once, descriptor_table_DemConDataTransfer_2eproto_sccs, descriptor_table_DemConDataTransfer_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_DemConDataTransfer_2eproto::offsets,
  file_level_metadata_DemConDataTransfer_2eproto, 4, file_level_enum_descriptors_DemConDataTransfer_2eproto, file_level_service_descriptors_DemConDataTransfer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_DemConDataTransfer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_DemConDataTransfer_2eproto)), true);
namespace ExternalDataTransfer {

// ===================================================================

void Pt_DataVoid::InitAsDefaultInstance() {
}
class Pt_DataVoid::_Internal {
 public:
};

Pt_DataVoid::Pt_DataVoid(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_DataVoid)
}
Pt_DataVoid::Pt_DataVoid(const Pt_DataVoid& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_DataVoid)
}

void Pt_DataVoid::SharedCtor() {
}

Pt_DataVoid::~Pt_DataVoid() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_DataVoid)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_DataVoid::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_DataVoid::ArenaDtor(void* object) {
  Pt_DataVoid* _this = reinterpret_cast< Pt_DataVoid* >(object);
  (void)_this;
}
void Pt_DataVoid::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_DataVoid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_DataVoid& Pt_DataVoid::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_DataVoid_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_DataVoid::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_DataVoid)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_DataVoid::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_DataVoid::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_DataVoid)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_DataVoid)
  return target;
}

size_t Pt_DataVoid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_DataVoid)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_DataVoid::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_DataVoid)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_DataVoid* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_DataVoid>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_DataVoid)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_DataVoid)
    MergeFrom(*source);
  }
}

void Pt_DataVoid::MergeFrom(const Pt_DataVoid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_DataVoid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Pt_DataVoid::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_DataVoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_DataVoid::CopyFrom(const Pt_DataVoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_DataVoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_DataVoid::IsInitialized() const {
  return true;
}

void Pt_DataVoid::InternalSwap(Pt_DataVoid* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_DataVoid::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_DataResult::InitAsDefaultInstance() {
}
class Pt_DataResult::_Internal {
 public:
};

Pt_DataResult::Pt_DataResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_DataResult)
}
Pt_DataResult::Pt_DataResult(const Pt_DataResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_DataResult)
}

void Pt_DataResult::SharedCtor() {
  result_ = 0;
}

Pt_DataResult::~Pt_DataResult() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_DataResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_DataResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_DataResult::ArenaDtor(void* object) {
  Pt_DataResult* _this = reinterpret_cast< Pt_DataResult* >(object);
  (void)_this;
}
void Pt_DataResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_DataResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_DataResult& Pt_DataResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_DataResult_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_DataResult::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_DataResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_DataResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_DataResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_DataResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_DataResult)
  return target;
}

size_t Pt_DataResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_DataResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_DataResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_DataResult)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_DataResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_DataResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_DataResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_DataResult)
    MergeFrom(*source);
  }
}

void Pt_DataResult::MergeFrom(const Pt_DataResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_DataResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void Pt_DataResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_DataResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_DataResult::CopyFrom(const Pt_DataResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_DataResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_DataResult::IsInitialized() const {
  return true;
}

void Pt_DataResult::InternalSwap(Pt_DataResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_DataResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_EnableState::InitAsDefaultInstance() {
}
class Pt_EnableState::_Internal {
 public:
};

Pt_EnableState::Pt_EnableState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_EnableState)
}
Pt_EnableState::Pt_EnableState(const Pt_EnableState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  enablestate_ = from.enablestate_;
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_EnableState)
}

void Pt_EnableState::SharedCtor() {
  enablestate_ = 0;
}

Pt_EnableState::~Pt_EnableState() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_EnableState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_EnableState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_EnableState::ArenaDtor(void* object) {
  Pt_EnableState* _this = reinterpret_cast< Pt_EnableState* >(object);
  (void)_this;
}
void Pt_EnableState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_EnableState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_EnableState& Pt_EnableState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_EnableState_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_EnableState::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_EnableState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enablestate_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_EnableState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 enablestate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          enablestate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_EnableState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_EnableState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 enablestate = 1;
  if (this->enablestate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_enablestate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_EnableState)
  return target;
}

size_t Pt_EnableState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_EnableState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 enablestate = 1;
  if (this->enablestate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_enablestate());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_EnableState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_EnableState)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_EnableState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_EnableState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_EnableState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_EnableState)
    MergeFrom(*source);
  }
}

void Pt_EnableState::MergeFrom(const Pt_EnableState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_EnableState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enablestate() != 0) {
    _internal_set_enablestate(from._internal_enablestate());
  }
}

void Pt_EnableState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_EnableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_EnableState::CopyFrom(const Pt_EnableState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_EnableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_EnableState::IsInitialized() const {
  return true;
}

void Pt_EnableState::InternalSwap(Pt_EnableState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(enablestate_, other->enablestate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_EnableState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Pt_AXISPOS_SCARA::InitAsDefaultInstance() {
}
class Pt_AXISPOS_SCARA::_Internal {
 public:
};

Pt_AXISPOS_SCARA::Pt_AXISPOS_SCARA(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ExternalDataTransfer.Pt_AXISPOS_SCARA)
}
Pt_AXISPOS_SCARA::Pt_AXISPOS_SCARA(const Pt_AXISPOS_SCARA& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&a1_, &from.a1_,
    static_cast<size_t>(reinterpret_cast<char*>(&a4_) -
    reinterpret_cast<char*>(&a1_)) + sizeof(a4_));
  // @@protoc_insertion_point(copy_constructor:ExternalDataTransfer.Pt_AXISPOS_SCARA)
}

void Pt_AXISPOS_SCARA::SharedCtor() {
  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a4_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(a4_));
}

Pt_AXISPOS_SCARA::~Pt_AXISPOS_SCARA() {
  // @@protoc_insertion_point(destructor:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Pt_AXISPOS_SCARA::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Pt_AXISPOS_SCARA::ArenaDtor(void* object) {
  Pt_AXISPOS_SCARA* _this = reinterpret_cast< Pt_AXISPOS_SCARA* >(object);
  (void)_this;
}
void Pt_AXISPOS_SCARA::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Pt_AXISPOS_SCARA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Pt_AXISPOS_SCARA& Pt_AXISPOS_SCARA::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Pt_AXISPOS_SCARA_DemConDataTransfer_2eproto.base);
  return *internal_default_instance();
}


void Pt_AXISPOS_SCARA::Clear() {
// @@protoc_insertion_point(message_clear_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a4_) -
      reinterpret_cast<char*>(&a1_)) + sizeof(a4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Pt_AXISPOS_SCARA::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double a1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          a1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double a2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          a2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double a3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          a3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double a4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          a4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Pt_AXISPOS_SCARA::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double a1 = 1;
  if (!(this->a1() <= 0 && this->a1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_a1(), target);
  }

  // double a2 = 2;
  if (!(this->a2() <= 0 && this->a2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_a2(), target);
  }

  // double a3 = 3;
  if (!(this->a3() <= 0 && this->a3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_a3(), target);
  }

  // double a4 = 4;
  if (!(this->a4() <= 0 && this->a4() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_a4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  return target;
}

size_t Pt_AXISPOS_SCARA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double a1 = 1;
  if (!(this->a1() <= 0 && this->a1() >= 0)) {
    total_size += 1 + 8;
  }

  // double a2 = 2;
  if (!(this->a2() <= 0 && this->a2() >= 0)) {
    total_size += 1 + 8;
  }

  // double a3 = 3;
  if (!(this->a3() <= 0 && this->a3() >= 0)) {
    total_size += 1 + 8;
  }

  // double a4 = 4;
  if (!(this->a4() <= 0 && this->a4() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pt_AXISPOS_SCARA::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  GOOGLE_DCHECK_NE(&from, this);
  const Pt_AXISPOS_SCARA* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Pt_AXISPOS_SCARA>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExternalDataTransfer.Pt_AXISPOS_SCARA)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExternalDataTransfer.Pt_AXISPOS_SCARA)
    MergeFrom(*source);
  }
}

void Pt_AXISPOS_SCARA::MergeFrom(const Pt_AXISPOS_SCARA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.a1() <= 0 && from.a1() >= 0)) {
    _internal_set_a1(from._internal_a1());
  }
  if (!(from.a2() <= 0 && from.a2() >= 0)) {
    _internal_set_a2(from._internal_a2());
  }
  if (!(from.a3() <= 0 && from.a3() >= 0)) {
    _internal_set_a3(from._internal_a3());
  }
  if (!(from.a4() <= 0 && from.a4() >= 0)) {
    _internal_set_a4(from._internal_a4());
  }
}

void Pt_AXISPOS_SCARA::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pt_AXISPOS_SCARA::CopyFrom(const Pt_AXISPOS_SCARA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExternalDataTransfer.Pt_AXISPOS_SCARA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pt_AXISPOS_SCARA::IsInitialized() const {
  return true;
}

void Pt_AXISPOS_SCARA::InternalSwap(Pt_AXISPOS_SCARA* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pt_AXISPOS_SCARA, a4_)
      + sizeof(Pt_AXISPOS_SCARA::a4_)
      - PROTOBUF_FIELD_OFFSET(Pt_AXISPOS_SCARA, a1_)>(
          reinterpret_cast<char*>(&a1_),
          reinterpret_cast<char*>(&other->a1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Pt_AXISPOS_SCARA::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ExternalDataTransfer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_DataVoid* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_DataVoid >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_DataVoid >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_DataResult* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_DataResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_DataResult >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_EnableState* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_EnableState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_EnableState >(arena);
}
template<> PROTOBUF_NOINLINE ::ExternalDataTransfer::Pt_AXISPOS_SCARA* Arena::CreateMaybeMessage< ::ExternalDataTransfer::Pt_AXISPOS_SCARA >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ExternalDataTransfer::Pt_AXISPOS_SCARA >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
